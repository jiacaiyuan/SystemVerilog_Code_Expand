
//DEMO variable
//:$width = 16
//:$depth = 8;
wire [${width}-1:0] data = ${width}'b0;
logic [31:0] buffer[${depth}];

//:$name="alu"
wire ${name}_vld = 0;

//:$nam_q = ["alu","lsu","fsu"]
//:for($i=0; $i<len($nam_q); $i=$i+1) {
	assign ${nam_q[${i}]} = 1;
//:}

//:$test = [[1,2],[3,4],[5,6]]
//:for($i=0;$i<3;$i=$i+1) {
//:for($j=0;$j<2;$j=$j+1) {
assign value_${test[${i}][${j}]} = 0;
//:}
//:}


//DEMO: FOR
//:$max = 2;
//:for($i=0;$i<$max;$i=$i+1) {
//:for($j=1;$j<3;$j++) {
//:$var = $i*$j;
	assign value_${var} = ${i} * ${j};
//:}
//:}

//DEMO: IF
//:$cmp_a = 3;
//:$cmp_b = 5;
//cond1:
//:if($cmp_a < $cmp_b) {
	assign if_match = a < b;
//:}
//cond2:
//:if($cmp_a > $cmp_b) {
	assign if_match = a > b;
//:else {
	assign else_match = a < b;
//:}
//:}
//cond3:
//:if($cmp_a > $cmp_b) {
	assign if_match = a > b;
//:elsif($cmp_a != $cmp_b) {
	assign elsif_match1 = a != b;
//:elsif($cmp_a < $cmp_b) {
	assign elsif_match2 = a < b;
//:else {
	assign else_match = a = b;
//:}
//:}
//:}
//:}


//DEMO: IF condition
//:$cmp_a = 3;
//:$cmp_b = 5;
//cond1:
// + - * // % is all ok 
//:if(($cmp_b + $cmp_a) == 8) {
	assign if_match = cmp_a + cmp_b == 8;
//:}
//cond2:
// > < >= <= != == is all ok
// & && | || or and is ok
//:if(($cmp_a!=5)&&($cmp_b !=3)) {
	assign if_match = cmp_a !=0 and cmp_b !=0;
//:}
//cond3:
// ~ ! not is all ok
//:if(!($cmp_a!=3)) {
	assign if_match = cmp_a ==3;
//:}
//cond4:
//:$test = [[1,2],[3,4],[5,6]]
//:if($test[0][0] == 1) {
	assign test[0][0] = 1;
//:}



//DEMO: variable overwrite 
//DEMO: nested if or for
//:$alu = 5
//:$bru=10
//:$max = 3;
//:for($i=0;$i<$max ;$i=$i+1){
//:for($j=1;$j<$bru;$j=$j+1){
//:$alu = $j%3 + 100;
   assign alu = ${alu} ;
//:if($i == $j) {
	assign if_match = ${i} == ${j};
//:elsif($i == $j+1) {
	assign elsif_match = ${i} = ${j} + 1;
//:else {
	assign else_match = ${i} != ${j};
//:}
//:}
//:}


//:}
//:}
  
  
  
//:}
//:}

assign alu= ${alu}



//:if($alu > $bru) {
   assign ${alu} > ${bru};
//:   for($i=0;$i<2;$i=$i+1) {
   assign ${i}
   //:}
   
//:elsif($alu != $bru) {
   assign ${alu} != ${bru};
//:   for($i=0;$i<5;$i=$i+1) {
   assign ${i}
   //:}
//:else {
   assign ${alu} < ${bru};
//:for($i=0;$i<8;$i=$i+1) {
   assign ${i}
   //:}
//:}
//:}
//:}

finish 
